{"ast":null,"code":"var _jsxFileName = \"D:\\\\doctor-appointment-system\\\\frontend\\\\src\\\\pages\\\\DoctorDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoctorDetails() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [doctor, setDoctor] = useState({});\n  const [appointmentDate, setAppointmentDate] = useState('');\n  useEffect(() => {\n    async function fetchDoctor() {\n      const res = await api.get(`/doctors/${id}`);\n      setDoctor(res.data);\n    }\n    fetchDoctor();\n  }, [id]);\n  const handleBooking = async () => {\n    try {\n      await api.post('/appointments', {\n        user_id: 1,\n        // Assuming static logged-in user id = 1 for now\n        doctor_id: doctor.id,\n        appointment_date: appointmentDate\n      });\n      alert('Appointment Booked Successfully!');\n      navigate('/dashboard');\n    } catch (error) {\n      alert('Failed to book appointment.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: doctor.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Specialization:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }, this), \" \", doctor.specialization]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Experience:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 10\n      }, this), \" \", doctor.experience, \" years\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Fees:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 10\n      }, this), \" \\u20B9\", doctor.fees]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: appointmentDate,\n      onChange: e => setAppointmentDate(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBooking,\n      children: \"Book Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorDetails, \"ZE23QB6a8NRl7X414WykpY3aYpU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = DoctorDetails;\nexport default DoctorDetails;\nvar _c;\n$RefreshReg$(_c, \"DoctorDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","api","jsxDEV","_jsxDEV","DoctorDetails","_s","id","navigate","doctor","setDoctor","appointmentDate","setAppointmentDate","fetchDoctor","res","get","data","handleBooking","post","user_id","doctor_id","appointment_date","alert","error","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","specialization","experience","fees","type","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["D:/doctor-appointment-system/frontend/src/pages/DoctorDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport api from '../api';\r\n\r\nfunction DoctorDetails() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [doctor, setDoctor] = useState({});\r\n  const [appointmentDate, setAppointmentDate] = useState('');\r\n\r\n  useEffect(() => {\r\n    async function fetchDoctor() {\r\n      const res = await api.get(`/doctors/${id}`);\r\n      setDoctor(res.data);\r\n    }\r\n    fetchDoctor();\r\n  }, [id]);\r\n\r\n  const handleBooking = async () => {\r\n    try {\r\n      await api.post('/appointments', {\r\n        user_id: 1, // Assuming static logged-in user id = 1 for now\r\n        doctor_id: doctor.id,\r\n        appointment_date: appointmentDate\r\n      });\r\n      alert('Appointment Booked Successfully!');\r\n      navigate('/dashboard');\r\n    } catch (error) {\r\n      alert('Failed to book appointment.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h2>{doctor.name}</h2>\r\n      <p><b>Specialization:</b> {doctor.specialization}</p>\r\n      <p><b>Experience:</b> {doctor.experience} years</p>\r\n      <p><b>Fees:</b> â‚¹{doctor.fees}</p>\r\n\r\n      <input \r\n        type=\"date\" \r\n        value={appointmentDate} \r\n        onChange={(e) => setAppointmentDate(e.target.value)} \r\n        required \r\n      />\r\n      <button onClick={handleBooking}>Book Appointment</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoctorDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}